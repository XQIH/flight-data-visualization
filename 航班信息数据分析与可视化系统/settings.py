"""
Django settings for 航班信息数据分析与可视化系统 project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-&)b@g9in+p30buac_wdh^wy-g6@wxdgm*vl))))t(wsu&rl8-6"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    "simpleui",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django_q',
    'captcha',
    "sysuser",
    "visual"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "航班信息数据分析与可视化系统.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "航班信息数据分析与可视化系统.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
from . import AdminConfig

PROJECT_NAME = AdminConfig.projectname
DATABASE_NAME = "airdb"
DATABASE_USER = "root"
DATABASE_PSW = "123456"
DATABASE_PORT = 3306
DATABASE_HOST = "localhost"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": DATABASE_NAME,
        "USER": DATABASE_USER,
        "PASSWORD": DATABASE_PSW,
        "PORT": DATABASE_PORT,
        "HOST": DATABASE_HOST,

        "OPTIONS": {
            "charset": "utf8mb4",
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES', time_zone='+08:00'",
        },
    }
}
try:
    from pymysql.connections import Connection

    conn = Connection(
        host=DATABASE_HOST,
        port=DATABASE_PORT,
        user=DATABASE_USER,
        password=DATABASE_PSW,
    )
    with conn.cursor() as cursor:
        cursor.execute("show databases;".upper())
        res = cursor.fetchall()
        databases = [database[0] for database in res]
        print("Check The DataBase Has Exist?", DATABASE_NAME in databases)
        if DATABASE_NAME not in databases:
            cursor.execute(
                f"create database {DATABASE_NAME} CHARACTER SET utf8 COLLATE utf8_general_ci;"
            )
            print(
                f"Create Database: {DATABASE_NAME}",
            )
        print("Using DataBase: ", DATABASE_NAME)
except Exception as e:
    pass
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True

SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_ROOT = BASE_DIR / "staticfiles"
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 这里开始是增加的设置
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 引擎（默认）

SESSION_COOKIE_NAME = "sessionid"  # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）
SESSION_COOKIE_PATH = "/"  # Session的cookie保存的路径（默认）
SESSION_COOKIE_DOMAIN = None  # Session的cookie保存的域名（默认）
SESSION_COOKIE_SECURE = False  # 是否Https传输cookie（默认）
SESSION_COOKIE_HTTPONLY = False  # 是否Session的cookie只支持http传输（默认）
SESSION_COOKIE_AGE = 1209600  # Session的cookie失效日期（2周）（默认）
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # 是否关闭浏览器使得Session过期（默认）
SESSION_SAVE_EVERY_REQUEST = False  # 是否每次请求都保存Session，默认修改之后才保存（默认）

# admin后台样式调整


# 后台左上角logo
SIMPLEUI_LOGO = AdminConfig.LOGO

# 后台的主题
SIMPLEUI_DEFAULT_THEME = AdminConfig.THEME2

# 后台左侧菜单设置
SIMPLEUI_CONFIG = AdminConfig.CONFIG

# # 后台首页样式设置
# SIMPLEUI_HOME_PAGE = AdminConfig.URL
# SIMPLEUI_HOME_TITLE = AdminConfig.TITLE
# SIMPLEUI_HOME_ICON = AdminConfig.ICON

# 验证码
CAPTCHA_FONT_SIZE = 30
CAPTCHA_LETTER_ROTATION = (-10, 10)
CAPTCHA_BACKGROUND_COLOR = '#ffffff'
CAPTCHA_FOREGROUND_COLOR = '#000000'


# Django-Q配置
Q_CLUSTER = {
    'time_zone': 'Asia/Shanghai',
    'use_django_tz': True,
    'name': 'FlightData',
    'workers': 4,
    'timeout': 36000,
    'retry': 36010,         # 必须比timeout大5-10秒
    'redis': {
        'host': '127.0.0.1',
        'port': 6379,  # 确保与 Redis 服务器端口一致
        'db': 0,
    }
}

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
